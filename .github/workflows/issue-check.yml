name: Check Similar Issues

permissions:
  issues: write
  
on:
  issues:
    types: [opened]

jobs:
  check-similar:
    runs-on: ubuntu-latest
    steps:
      - name: Check for similar issues
        uses: actions/github-script@v7
        with:
          script: |
            const issueTitle = context.payload.issue.title;
            const issueNumber = context.payload.issue.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;

            console.log(`Checking for issues similar to: "${issueTitle}" (Issue #${issueNumber})`);

            // Fetch all open issues
            const { data: issues } = await github.rest.issues.listForRepo({
              owner,
              repo,
              state: "open",
              per_page: 50
            });

            console.log(`Found ${issues.length} total open issues`);

            // Split the new issue title into words and filter out common words
            const titleWords = issueTitle.toLowerCase().split(/\s+/).filter(word => word.length > 2);
            console.log(`Keywords from new issue: ${titleWords.join(', ')}`);

            const similarIssues = issues.filter(issue => {
              if (issue.number === issueNumber) return false;
              
              const otherTitle = issue.title.toLowerCase();
              // Check if any of the words from the new issue title appear in the other issue
              const matches = titleWords.some(word => otherTitle.includes(word));
              
              if (matches) {
                console.log(`Match found: Issue #${issue.number} - "${issue.title}"`);
              }
              
              return matches;
            });

            console.log(`Found ${similarIssues.length} similar issues`);

            if (similarIssues.length > 0) {
              let commentBody = "🔍 **Similar Issues Found**\n\n";
              commentBody += "| Issue | Summary | Labels |\n";
              commentBody += "|-------|---------|--------|\n";
              
              similarIssues.forEach(issue => {
                const labels = issue.labels.map(label => `\`${label.name}\``).join(', ') || '-';
                commentBody += `| [#${issue.number}](${issue.html_url}) | ${issue.title} | ${labels} |\n`;
              });

              commentBody += "\n Please review these similar issues before proceeding!";

              console.log('Creating comment with similar issues');
              
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: issueNumber,
                body: commentBody
              });
              
              console.log('Comment created successfully');
            } else {
              console.log('No similar issues found - no comment needed');
            }